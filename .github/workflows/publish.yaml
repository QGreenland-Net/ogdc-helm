name: "Build and publish ogdc-helm chart"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  ## oci://ghcr.io/QGreenland/charts/ogdc --version [version] \
  CHART_NAME: "ogdc"
  REGISTRY: "ghcr.io"

jobs:
  #######################################################################
  # Build & Test Helm Chart
  #######################################################################
  build-helm:
    name: "Build and test Helm chart"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v5"
        with:
          fetch-depth: 0

      - name: "Set up Helm"
        uses: "azure/setup-helm@v4"
        with:
          version: "latest"

      - name: "Helm dependency update"
        run: |
          cd helm
          helm dependency update

      - name: "Lint Helm chart"
        run: |
          helm lint helm/

      - name: "Template Helm chart"
        run: |
          helm template test helm/ --debug

      - name: "Package Helm chart"
        run: |
          helm package helm/ --destination .

      - name: "Upload chart package as artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "helm-chart"
          path: "*.tgz"

  #######################################################################
  # Publish Helm Chart to GHCR
  #######################################################################
  publish-helm:
    # Only push on tag or push to main.
    if: github.ref_type == 'tag' || github.ref == 'refs/heads/main'
    name: "Push Helm chart to GHCR"
    runs-on: "ubuntu-latest"
    needs: ["build-helm"]
    permissions:
      contents: read
      packages: write

    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v5"

      - name: "Set up Helm"
        uses: "azure/setup-helm@v4"
        with:
          version: "latest"

      - name: "Download chart package"
        uses: "actions/download-artifact@v4"
        with:
          name: "helm-chart"

			- name: "Set CHART_VERSION environment variable"
				run: |
					CHART_VERSION=$(ls *.tgz | sed -E 's/.*-([0-9]+\.[0-9]+\.[0-9]+.*)\.tgz/\1/')
					echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV

			- name: "GHCR Login"
				run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

			- name: "Push Helm chart to GHCR"
				run: |
					for chart in ./*.tgz; do
						helm push "$chart" oci://ghcr.io/qgreenland/charts
					done

      - name: "Generate installation instructions"
        run: |
          ## ðŸ“¦ Helm Chart Published
          
          ### Installation
          
          \`\`\`bash
          # Make sure you're in the correct k8s context, then:
          helm upgrade --install ${CHART_NAME} \\
            oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${CHART_NAME} \\
            --version ${CHART_VERSION} \\
            -n qgnet --create-namespace
          \`\`\`
          
          ### Using with values file
          
          \`\`\`bash
          helm upgrade --install ${CHART_NAME} \\
            oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${CHART_NAME} \\
            --version ${CHART_VERSION} \\
            -f values-dev-cluster-ogdc.yaml \\
            -n qgnet
          \`\`\`
          EOF

  #######################################################################
  # GitHub release
  #######################################################################
  publish-gh-release:
    # Only publish a GH release when publish-helm task is complete
    # and the ref type is a tag (e.g., v0.1.0).
    if: github.ref_type == 'tag'
    name: "Create GitHub release"
    needs: ["publish-helm"]
    runs-on: "ubuntu-latest"
    permissions:
      contents: write

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"

      - name: "Download chart package"
        uses: "actions/download-artifact@v4"
        with:
          name: "helm-chart"

      - name: "Release"
        uses: "softprops/action-gh-release@v2"
        with:
          generate_release_notes: true
          files: "*.tgz"
